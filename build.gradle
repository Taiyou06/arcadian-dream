plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

remapJar {
	archiveAppendix.set("${project.minecraft_version}")
}

repositories {
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/releases/"
	}
	maven {
		name = 'Ladysnake Mods'
		url = 'https://maven.ladysnake.org/releases'
	}
	maven {
		url "https://maven.shedaniel.me"
	}
	maven {
		// location of the maven that hosts JEI files since January 2023
		name = "Jared's maven"
		url = "https://maven.blamejared.com/"
	}
	maven {
		// location of a maven mirror for JEI files, as a fallback
		name = "ModMaven"
		url = "https://modmaven.dev"
	}
	maven {
		url 'https://maven.wispforest.io'
	}
	maven {
		url = "https://jitpack.io"
	}
	maven {
		url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Libraries
	// https://github.com/emilyploszaj/trinkets
	modImplementation "dev.emi:trinkets:${project.trinkets_version}"

	// https://github.com/shedaniel/RoughlyEnoughItems
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:${project.rei_version}"
	// modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"

	// https://github.com/mezz/JustEnoughItems
	modCompileOnly("mezz.jei:jei-${project.minecraft_version}-fabric:${project.jei_version}") {exclude group: "mezz.jei"}
	// modRuntimeOnly("mezz.jei:jei-${project.minecraft_version}-fabric:${project.jei_version}")

	// https://github.com/emilyploszaj/emi
	modCompileOnly "dev.emi:emi-fabric:${project.emi_version}:api"
	modLocalRuntime "dev.emi:emi-fabric:${project.emi_version}"

	// https://github.com/wisp-forest/owo-lib
	annotationProcessor modImplementation("io.wispforest:owo-lib:${project.owo_version}")
	include "io.wispforest:owo-sentinel:${project.owo_version}"

	// https://github.com/Virtuoel/Pehkui
	modApi("com.github.Virtuoel:Pehkui:${pehkui_version}", {exclude group: "net.fabricmc.fabric-api"})

	// https://github.com/bernie-g/geckolib
	modImplementation "software.bernie.geckolib:geckolib-fabric-1.21:${project.geckolib_version}"

	// https://github.com/LlamaLad7/MixinExtras
	include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:${project.mixinextras_version}")))
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}

	exclude("assets/arcadiandream/sounds/records/README.md")
}

loom {
	runs {
		datagen {
			inherit client
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated/resources")}"
			vmArg "-Dfabric-api.datagen.modid=${mod_id}"

			runDir "build/datagen"
		}
	}
}

sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated/resources'
			]
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	//noinspection GroovyAssignabilityCheck, GroovyAccessibility
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

remapSourcesJar {
	archiveAppendix.set("${project.minecraft_version}")
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
	from("LICENSE.ASSETS") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		//noinspection GroovyAssignabilityCheck
		mavenJava(MavenPublication) {
			//noinspection GroovyAssignabilityCheck
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
